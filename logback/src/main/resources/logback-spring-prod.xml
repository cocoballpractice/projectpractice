<included>

    <property resource="logback-variables.properties" />

    <appender name="REQUEST1" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 경로 지정 -->
        <file>${LOG_DIR}/request1.log</file>
        <!-- 옵션 설정 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 일정 시간 이후 파일로 저장될 때의 파일명 패턴-->
            <fileNamePattern>${LOG_DIR}/archive/request1.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>1KB</maxFileSize> <!-- 로그 파일 당 최대 용량 -->
            <maxHistory>30</maxHistory><!-- 로그 파일 최대 보관 주기 (단위 : 일) -->
        </rollingPolicy>
        <!-- 인코딩 + 로그 패턴 설정 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [REQUEST1] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 로그 파일의 HEADER 부분에 로그 패턴 출력 -->
        </encoder>
   	</appender>

    <appender name="REQUEST2" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/request2.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/request2.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>10KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [REQUEST2] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
   	</appender>

    <appender name="MDC" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/mdc.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/mdc.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>10KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [MDC] %X{job}%n <!--%X{} 안에 있는 key의 value를 가져옴 -->
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
   	</appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/error.log</file>
        <!-- 로그 레벨 필터링을 위한 설정 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch> <!-- 위에 설정한 로그와 맞다면 ACCEPT -->
            <onMismatch>DENY</onMismatch> <!-- 그 외의 로그는 DENY -->
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/archive/error.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>10KB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                [ERROR] ${LOG_PATTERN}
            </pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
   	</appender>

    <root level="INFO">
        <appender-ref ref="REQUEST1" />
        <appender-ref ref="REQUEST2" />
        <appender-ref ref="MDC" />
        <appender-ref ref="ERROR" />
    </root>

</included>